?abline
abline(v=7.65)
abline(v=8.39)
abline(v=8.81)
distribution(returned$ratio)
fit
anova(fit)
plot(returned$date, returned$ratio)
lm(returned$radio ~ returned$date^2)
lm(returned$radio ~ I(returned$date^2))
lm(returned$radio ~ returned$date
)
lm(returned$ratio ~ returned$date^2)
fit2  <-  lm(returned$ratio ~ returned$date^2+returned$date)
summary(fit2)
abline(fit2)
line(lowess(returned$date, returned$ratio))
lines(lowess(returned$date, returned$ratio))
fit3 <- lines(lowess(returned$date, returned$ratio))
anova(fit3,fit2)
anova(fit3)
anova(lm(returned$ratio ~ returned$date), lowess(returned$date, returned$ratio))
lines(lowess(returned$date, returned$ratio))
line(lowess(returned$date, returned$ratio))
(lowess(returned$date, returned$ratio))
summary(lowess(returned$date, returned$ratio))
lines(lm(returned$ratio ~ I(returned$date^2)))
?lowess
a  <- NULL
shipped <- read.csv("~/Downloads/op_shipped_de - op_shipped_de.csv", sep=";")
View(shipped)
names(shipped)  <- c("date", "positions_shipped", "orders_shipped")
plot(shipped$date, shipped$poisitions_shipped)
par(mfrow = c(2,2))
plot(shipped$date, shipped$positions_shipped)
plot(shipped$date, shipped$orders_shipped)
shipped$ratio <- shipped$positions_shipped/shipped$orders_shipped
plot(density(shipped$ratio))
plot(shipped$date, shipped$ratio)
abline(lm(shipped$ratio ~ shipped$date))
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.05, .95), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
remove_outliers(shipped$positions_shipped)
quantile(shipped$positions_shipped, 0.05)
remove_outliers  <- function(data){}
remove_outliers  <- function(data){
minq  <- quantile(data, 0.05)
data[data < minq]  <- NA
data
}
remove_outliers(shipped$orders_shipped)
shipped$order_shipped  <-  remove_outliers(shipped$orders_shipped)
shipped$orders_shipped  <-  remove_outliers(shipped$orders_shipped)
shipped$positions_shipped  <-  remove_outliers(shipped$positions_shipped)
shipped$order_shipped  <-  NULL
shipped
plot(returned$date, returned$positions_shipped)
plot(shipped$date, shipped$positions_shipped)
abline(lm(shipped$positions_shipped ~ shipped$date))
class(shipped$date)
shipped$date  <-  as.Date(shipped$date)
plot(shipped$date, shipped$positions_shipped)
abline(lm(shipped$positions_shipped ~ shipped$date))
plot(shipped$date, shipped$orders_shipped)
abline(lm(shipped$orders_shipped ~ shipped$date))
view(shipped)
View(shipped)
quantile(shipped$orders_shipped, seq(0.1, 1, 0.1))
quantile(shipped$orders_shipped, seq(0.1, 1, 0.1), na.rm=TRUE)
quantile(shipped$orders_shipped, seq(0.01, 0.1, 0.01), na.rm=TRUE
)
memory  <-  function(N, n)
{}
memory  <-  function(N, n)
{
memory <- 2N/N* rep((2(N-n+1)))
N = 1:20
?rep
rep(2*N, 5)
sum(N)
memory  <-  function(N, n)
{
grossN  <- 1:N
grossN <- N:1
a  <- rep((2*(N-grossN))/(2N-grossN), n+1)
}
gros  <- N:1
N
g  <- 20:1
g
N  <- 20
n  <- 10
vecn  <- 1:n
vecn  <- 1:(n+1)
vec  <- (2*(N-vecn))/(2*N-vecn)
vec
prod(vec)
func memory(N,n)  <-
memory  <- func(N,n)
memoy  <- function(N,n)
{
vecn  <- 1:(n+1)
vec  <- (2(N-vecn))/(2*N-vecn)
memoy  <- prod(vec)
}
memoy(32,10)
memoy  <- function(N,n)
{
vecn  <- 1:(n+1)
vec  <- (2(N-vecn))/(2*N-vecn)
prod(vec)
}
memoy(32,10)
memoy
returne
?prod
prod
str(prod)
memory  <-  function(N,n)
{
vecn  <- 1:(n+1)
vec  <- (2(N-vecn))/(2*N-vecn)
return(prod(vec))
}
1-memory(32,10)
prod(1:n)
prod(1:3)
vec
vecn  <- 1:(n+1)
vec  <- (2(N-vecn))/(2*N-vecn)
N
vecn
(2*(N-vecn))/(2*N-vecn)
aa  <-  (2*(N-vecn))/(2*N-vecn)
memory  <-  function(N,n){
vecn  <-  1:(n+1)
erg  <-  (2*(N-vecn))/(2*N-vecn)
return(prod(erg))
}
memory(32,10)
1-memory(32,10)
1-memory(32,32)
x  <- 1:32
plot(x, meomry(32,x))
plot(x, memory(32,x))
plot(x, apply(memory(32,x))
)
plot(x, rep(memory(32,x), x))
plot(memory(32,x))
plot(1:32, memory(32,1:32))
memory(32,1:32)
x
meomry(32,x)
memory(32,x)
?apply
apply(x, memory)
apply(x, memory(32,x))
apply(x, FUN=memory(32,x))
x
y <- memory(32,as.numeric(x))
?seq
memory(32,seq(1,32))
mapply(memory, 32, 1:32)
plot(x, mapply(memory,32,1:32))
plot(x, 1-mapply(memory,32,1:32))
noten  <- c(round(seq(1,4,1/3),1),5)
erg  <- c(1,1,2,2,3,4,9,11,15,20,36)
factor(erg)
tbl  <- cbind(factor(noten), erg)
hist(tbl)
?hist
plot(noten,erg)
smooth(erg)
curve(smooth(erg))
abline(smooth(erg))
data  <- rep(noten, erg)
data
hist(data)
hist(data, breaks = 12)
hist(data, breaks = 10)
hist(data, breaks = 8)
hist(data, breaks = 11)
?hist
hist(data, breaks = noten)
hist(data, breaks = noten, label = erg)
hist(data, breaks = noten, label = TRUE
)
hist(data, breaks = noten, label = TRUE
)
hist(data, breaks = noten, xlim = noten, label = TRUE)
hist(data, breaks = noten, xlim = range(1:5), label = TRUE)
?hist
hist(data, breaks = noten, xlim = range(1:5), label = TRUE, freq=FALSE)
hist(data, breaks = noten, xlim = range(1:5), label = TRUE,)
par(mar = c(1,1,1,1))
hist(data, breaks = noten, xlim = range(1:5), label = TRUE,)
par(mar = c(2,2,2,2))
hist(data, breaks = noten, xlim = range(1:5), label = TRUE,)
library(Hmisc)
install(Hmisc)
axis(1, noten)
hist(data, breaks = noten, label = TRUE, axis(1, noten))
plot(data)
prob.table(data)
table(data)
density(data)
plot(density(data))
data  <- data + 4.3
data  <- data + 4.7
plot(density(data))
data
noten <- c(round(1,4,1/3),5)
noten <- c(round(seq(1,4,1/3),1),5)
erg  <-  c(1,1,2,2,3,4,9,11,15,20,36)
cbind(factor(noten),erg)
data  <- cbind(factor(noten),erg)
plot(density(data))
data  <- rep(noten, erg)
plot(density(data))
plot(density(data), labels = TRE)
plot(density(data), labels = TRUE)
?density
summary(density(data))
summary(data)
boxplot(data)
plot(density(data))
hist(erg)
hist(data)
hist(data, breaks = noten)
hist(data, breaks = noten, label = TRUE)
data
data[1]  <- NULL
data[1]  <- NA
data
hist(data)
hist(data, breaks = noten)
table(noten)
table(data)
hist(data, breaks = noten, xaxt="n")
axis(1, at= noten)
?axis
View(diff)
fit1
summary(fit1)
library(caret)
library(data.table)
library(datasets)
library(e1071)
library(forecast)
library(graphics)
library(grDevices)
library(lattice)
library(lubridate)
library(MASS)
library(plyr)
library(stats)
library(stinepack)
library(timeDate)
library(utils)
library(zoo)
library(reshape2)
library(tree)
library(robust)
library(shiny)
library(bizdays)
read.csv("/Volumes/Storage/epub.txt")
read("/Volumes/Storage/epub.txt")-> d
read.csv("/Volumes/Storage/epub.txt", header =FALSE)-> d
head(d)
gsub(pattern = "/Volumes/Storage/epubs/[A-Z]", "", d$V1)->d$autor
head(d)
gsub(pattern = "/Volumes/Storage/epubs/[A-Z]/", "", d$V1)->d$autor
head(d)
gsub("/Volumes/Storage/epubs/[A-Z]", "$$$", d$autor)->d$autor
d$autor
gsub(pattern = "/Volumes/Storage/epubs/[A-Z]/", "", d$V1)->d$autor
d$autor
gsub(pattern = "/Volumes/Storage/epubs/[A-Z]/", "", d$V1)->d$autor
gsub("/Volumes/Storage/epubs/English/[english]", "", d$autor)->d$autor
d$autor
?gsub
gsub("/Volumes/Storage/epubs/English/", "", d$autor)->d$autor
d$autor
read.csv("/Volumes/Storage/epub.txt", header =FALSE, sep = ";")-> d
gsub(pattern = "/Volumes/Storage/epubs/[A-Z]", "", d$V1)->d$new
gsub("/Volumes/Storage/epubs/English/", "", d$new)->d$new
d$new
read.csv("/Volumes/Storage/epub.txt", header =FALSE, sep = "-")-> d
d
dim(d)
d$V1
gsub("/Volumes/Storage/epubs/English/", "", d$V1)->d$V1
gsub("/Volumes/Storage/epubs/[A-Z]/", "", d$V1)->d$V1
d$V1
gsub("[eng", "", d$V1)->d$V1
gsub("//[eng", "", d$V1)->d$V1
gsub("[[english]]", "", d$V1)->d$V1
d$V1
gsub("[[english]", "", d$V1)->d$V1
d$V1
View(d)
gsub(".epub", "", d$V2)
gsub(".epub", "", d$V2)->d$V2
gsub(".epub", "", d$V3)->d$V3
View(d)
write.csv(d, "/Volumes/Storage/newdata.csv")
mtcars
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
mtcars
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
mtcars[mtcars$cyl %in% c(4,6)]
mtcars[mtcars$cyl %in% c(4,6),]
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
mtcars[mtcars$cyl %in% input$cars_cyl,]
mtcars[mtcars$cyl %in% c(4,6),]
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
r
r <- 3
ar <- 3
eval("ar")
parse("ar")
parse(text="ar")
eval(parse(text="ar"))
colnames(mtcars)
list(colnames(mtcars))
list(unlist(colnames(mtcars)))
as.list(colnames(mtcars))
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
eval("mtcars")
eval(parse("mtcars"))
eval(parse(text="mtcars"))
(parse(text="mtcars"))
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
cardata()
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
ggplot(mtcars, aes(x = eval(parse(text="mpg")), y = eval(parse(text="mpg")))+geom_point()))
ggplot(mtcars, aes(x = eval(parse(text="mpg")), y = eval(parse(text="mpg")))+geom_point()
)
ggplot(mtcars, aes(x = eval(parse(text="mpg")), y = eval(parse(text="mpg"))))+geom_point()
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
a <- "cyl"
ggplot(mtcars, aes(x = eval(a), y = mpg))+geom_point()
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
mtcars
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
ggplot(cardata(), aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_smooth
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_smooth()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_smooth(group=1)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_text()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_text(label = rownames(mtcars))
rownames(mtcars)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_text(label = rownames(mtcars))
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_text(data = rownames(mtcars))
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_histogram
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_histogram()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_histogram(stat="bin")
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_bar()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_bar(stat="bin")
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_bar(stat="identity")
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()+geom_errorbar()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_boxplot()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_smooth()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl)))+geom_point()+geom_smooth(group=cyl)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+geom_smooth()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+geom_smooth(group = 1)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+geom_smooth(group = cyl)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+geom_smooth(group = mtcar$cyl)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+geom_smooth(group = mtcars$cyl)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line",aes(group = 1))+stat_summary(fun.y=mean, geom="point", shape = 18)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line",aes(group = 1))+stat_summary(fun.y=mean, geom="point", shape = 14)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line",aes(group = 1))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 4)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line",aes(group = 1))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line",aes(group = 1, color = "black"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line",aes(group = 1, color = "white"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line",aes(group = 1, color = "green"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line",aes(group = 1,))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line",aes(group = 1))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line")+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line", aes(group =1, color = "black"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line", aes(group =1, color = "black"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line", aes(group =1, color = "black"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)+geom_text()
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line", aes(group =1, color = "black"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)+geom_text(aes(label=rownames(mtcars)))
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line", aes(group =1, color = "black"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)+geom_text(aes(size = 2, label=rownames(mtcars)))
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line", aes(group =1, color = "black"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)+geom_text(aes(size = 6, label=rownames(mtcars)))
ggplot(mtcars, aes(x = cyl, y = mpg, color = factor(cyl), group = cyl))+geom_point()+stat_summary(fun.y=mean, geom="line", aes(group =1, color = "black"))+stat_summary(fun.y=mean, geom="point", shape = 18, size = 6)+geom_text(aes(textsize = 2, label=rownames(mtcars)))
shiny::runApp('/Volumes/Nifty/R/coursera/shiny-app')
read.csv("activity.csv")->data
getwd()
setwd("/Volumes/nifty/R/cousera/shiny-app")
setwd("/Volumes/nifty/R/coursera/shiny-app")
read.csv("activity.csv")->data
read.csv("activity.csv")->activitydata
library("data.table")
data.agg <- data.table(activitydata)[, list(avg_steps = mean(steps,na.rm=TRUE)), by = interval]
data.agg
data.agg <- data.table(data)[, list(avg_steps = mean(steps,na.rm=TRUE)), by = interval, date]
data.agg <- data.table(data)[, list(avg_steps = mean(steps,na.rm=TRUE)), by = list(interval, date)]
data.agg
activitydata.agg <- data.table(activitydata)[, list(avg_steps = mean(steps,na.rm=TRUE)), by = interval]
#fill NA's
activitydata <- merge(x = activitydata, y = activitydata.agg)
data$steps <- ifelse(is.na(data$steps), data$avg_steps, data$steps)
activitydata.agg <- data.table(activitydata)[, list(avg_steps = mean(steps,na.rm=TRUE)), by = interval]
#fill NA's
activitydata <- merge(x = activitydata, y = activitydata.agg)
activitydata$steps <- ifelse(is.na(activitydata$steps), activitydata$avg_steps, activitydata$steps)
ggplot(activitydata, aes(x=interval, y= steps))+geom_point()
activitydata$interval
activitydata$date
activitydata$date <- as.Date(activitydata$date)
activitydata.agg
data <- activitydata
data$hours <- substr(sprintf("%04d", activitydata.agg$interval),0,2)
data
activitydata
data$hours <- substr(sprintf("%04d", activitydata$interval),0,2)
data
table(data$hours, data$interval)
data
data <- data.table(data)[list(avg_steps = mean(steps, na.rm=TRUE)), by= list(interval, date)]
data <- data.table(data)[,list(avg_steps = mean(steps, na.rm=TRUE)), by= list(interval, date)]
data
interval_labels <- paste(paste(substr(sprintf("%04d", data$interval),0,2),":",sep=""),substr(sprintf("%04d", data$interval),3,4), sep="")
interval_labels
ggplot(data, aes(x = interval_factor, y = avg_steps)+geom_point()+ylab("average steps in interval")+theme(axis.text.x=element_text(angle = -90, hjust = 0))+scale_x_discrete(breaks = interval_labels[seq(1,288,6)])+geom_smooth(method="auto")+xlab("time")
)
length(interval_labels)
levels(interval_labels)
interval_labels
str(interval_labels)
table(interval_labels)
dim(table(interval_labels))
ggplot(data, aes(x = interval_factor, y = avg_steps))+geom_point()+ylab("average steps in interval")+theme(axis.text.x=element_text(angle = -90, hjust = 0))+scale_x_discrete(breaks = interval_labels[seq(1,dim(table(interval_labels)),6)])+geom_smooth(method="auto")+xlab("time")
data$interval_factor <- factor(data$interval, levels=interval_labels)
data$interval_facto   data <- data.table(data)[,list(avg_steps = mean(steps, na.rm=TRUE)), by= list(interval, date)]
#get a nice format
interval_labels <- paste(paste(substr(sprintf("%04d", data$interval),0,2),":",sep=""),substr(sprintf("%04d", data$interval),3,4), sep="")
data$interval_factor <- factor(data$interval, levels=interval_labels)
r <- factor(data$interval, levels=interval_labels)
interval_labels
data$interval_factor
data$interval_factor <- factor(x = data$interval, levels=interval_labels)
data$interval
length(data$interval)
length(data$interval_factor)
data$i <- factor(x=data$interval, levels= interval_labels)
data$interval
factor(data$interval)
data$interval <- factor(x = data$interval)
interval_labels <- paste(paste(substr(sprintf("%04d", data$interval),0,2),":",sep=""),substr(sprintf("%04d", data$interval),3,4), sep="")
levels(data$interval)<- interval_labels
data$interval
data <- data.table(data)[,list(avg_steps = mean(steps, na.rm=TRUE)), by= list(interval, date)]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
